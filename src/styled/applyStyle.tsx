import { css } from "styled-components";
import {
  space,
  margin,
  padding,
  width,
  fontSize,
  color,
  fontFamily,
  textAlign,
  lineHeight,
  fontWeight,
  fontStyle,
  letterSpacing,
  display,
  maxWidth,
  minWidth,
  height,
  maxHeight,
  minHeight,
  size,
  verticalAlign,
  alignItems,
  alignContent,
  justifyItems,
  justifyContent,
  flexWrap,
  flexBasis,
  flex,
  justifySelf,
  alignSelf,
  order,
  gridGap,
  gridColumnGap,
  gridRowGap,
  gridColumn,
  gridRow,
  gridAutoFlow,
  gridAutoColumns,
  gridAutoRows,
  gridTemplateColumns,
  gridTemplateRows,
  gridTemplateAreas,
  gridArea,
  border,
  borderTop,
  borderRight,
  borderBottom,
  borderLeft,
  borders,
  borderColor,
  borderRadius,
  boxShadow,
  opacity,
  overflow,
  background,
  backgroundImage,
  backgroundPosition,
  backgroundRepeat,
  backgroundSize,
  position,
  zIndex,
  right,
  bottom,
  left,
  textStyle,
  colorStyle,
  buttonStyle
} from "styled-system";
export const applyStyle = css<StylesProps & WrapperConfig>`
  ${space}
  ${margin}
  ${padding}
  ${width}
  ${fontSize}
  ${color}
  ${fontFamily}
  ${textAlign}
  ${lineHeight}
  ${fontWeight}
  ${fontStyle}
  ${letterSpacing}
  ${display}
  ${maxWidth}
  ${minWidth}
  ${height}
  ${maxHeight}
  ${minHeight}
  ${size}
  ${verticalAlign}
  ${alignItems}
  ${alignContent}
  ${justifyItems}
  ${justifyContent}
  ${flexWrap}
  ${flexBasis}
  ${flex}
  ${justifySelf}
  ${alignSelf}
  ${order}
  ${gridGap}
  ${gridColumnGap}
  ${gridRowGap}
  ${gridColumn}
  ${gridRow}
  ${gridAutoFlow}
  ${gridAutoColumns}
  ${gridAutoRows}
  ${gridTemplateColumns}
  ${gridTemplateRows}
  ${gridTemplateAreas}
  ${gridArea}
  ${border}
  ${borderTop}
  ${borderRight}
  ${borderBottom}
  ${borderLeft}
  ${borders}
  ${borderColor}
  ${borderRadius}
  ${boxShadow}
  ${opacity}
  ${overflow}
  ${background}
  ${backgroundImage}
  ${backgroundPosition}
  ${backgroundRepeat}
  ${backgroundSize}
  ${position}
  ${zIndex}
  ${right}
  ${bottom}
  ${left}
  ${textStyle}
  ${colorStyle}
  ${buttonStyle}
  ${props => (props.defaultCss ? props.defaultCss(props) : "")}
  word-break: ${props => props.wordBreak};
`;
